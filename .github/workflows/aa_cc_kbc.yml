name: attestation-agent cc_kbc tests

on:
  push:
    branches:
      - 'main'
    paths:
      - 'attestation-agent/kbc/cc_kbc/**'
      - 'attestation-agent/kbs_protocol/**'
      - 'attestation-agent/lib/**'
      - '.github/workflows/aa_cc_kbc.yml'
  pull_request:
    paths:
      - 'attestation-agent/kbc/cc_kbc/**'
      - 'attestation-agent/kbs_protocol/**'
      - 'attestation-agent/lib/**'
      - '.github/workflows/aa_cc_kbc.yml'
  create:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cc_kbc_ci:
    if: github.event_name != 'push'
    name: Check
    defaults:
      run:
        working-directory: ./attestation-agent
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
        kbc:
          - cc_kbc
          - cc_kbc_tdx
          - cc_kbc_sgx
          - cc_kbc_az_snp_vtpm
          - cc_kbc_snp
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Rust toolchain (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt

      - uses: ./.github/actions/install-intel-dcap
        with:
          ubuntu-version: noble

      - name: Install TPM dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libtss2-dev

      - name: Install protoc
        run: |
          sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Build and install with ${{ matrix.kbc }} feature
        run: |
          make KBC=${{ matrix.kbc }} && make install

      - name: Run rust lint check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # We are getting error in generated code due to derive_partial_eq_without_eq check, so ignore it for now
          args: -p kbc --all-targets --features cc_kbc,all-attesters,rust-crypto -- -D warnings -A clippy::derive_partial_eq_without_eq

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features cc_kbc,all-attesters,rust-crypto -p kbc
