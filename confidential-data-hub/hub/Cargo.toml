[package]
name = "confidential-data-hub"
version = "0.1.0"
authors = ["The Confidential Container Authors"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "ttrpc-cdh"
required-features = ["bin", "ttrpc"]

[[bin]]
name = "grpc-cdh"
required-features = ["bin", "grpc"]

[[bin]]
name = "ttrpc-cdh-tool"
required-features = ["bin", "ttrpc"]

[[bin]]
name = "grpc-cdh-tool"
required-features = ["bin", "grpc"]

[dependencies]
anyhow = { workspace = true, optional = true }
async-trait.workspace = true
attestation-agent = { path = "../../attestation-agent/attestation-agent", default-features = false, optional = true }
base64.workspace = true
cfg-if = { workspace = true, optional = true }
clap = { workspace = true, features = [ "derive" ], optional = true }
config = { workspace = true, optional = true }
env_logger = { workspace = true, optional = true }
image = { path = "../image", default-features = false }
kms = { path = "../kms", default-features = false }
lazy_static.workspace = true
log.workspace = true
prost = { workspace = true, optional = true }
protobuf = { workspace = true, optional = true }
secret.path = "../secret"
storage.path = "../storage"
serde = { workspace = true, optional = true }
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = [ "rt-multi-thread", "macros" ] }
tonic = { workspace = true, optional = true }
ttrpc = { workspace = true, features = ["async"], optional = true }

[build-dependencies]
tonic-build = { workspace = true, optional = true }
ttrpc-codegen = { workspace = true, optional = true }

[dev-dependencies]
rstest.workspace = true
tempfile.workspace = true

[features]
default = ["kbs", "bin", "ttrpc", "grpc"]

# support aliyun stacks (KMS, ..)
aliyun = ["image/aliyun", "secret/aliyun"]

# support coco-KBS to provide confidential resources
kbs = ["image/kbs", "kms/kbs", "secret/kbs"]

# support sev to provide confidential resources
sev = ["image/sev", "kms/sev", "secret/sev"]

# support eHSM stacks (KMS, ...)
ehsm = ["image/ehsm", "secret/ehsm"]

# Binary RPC type
bin = [ "anyhow", "attestation-agent", "cfg-if", "clap", "config", "env_logger", "serde" ]
ttrpc = ["dep:ttrpc", "protobuf", "ttrpc-codegen", "tokio/signal"]
grpc = ["prost", "tonic", "tonic-build", "tokio/signal"]
