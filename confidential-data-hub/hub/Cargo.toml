[package]
name = "confidential-data-hub"
version = "0.1.0"
authors = ["The Confidential Container Authors"]
edition = "2021"
license = "Apache-2.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "ttrpc-cdh"
required-features = ["bin", "ttrpc"]

[[bin]]
name = "grpc-cdh"
required-features = ["bin", "grpc"]

[[bin]]
name = "ttrpc-cdh-tool"
required-features = ["bin", "ttrpc"]

[[bin]]
name = "grpc-cdh-tool"
required-features = ["bin", "grpc"]

[[bin]]
name = "cdh-oneshot"
required-features = ["bin"]

[[bin]]
name = "secret"
path = "src/bin/secret_cli.rs"
required-features = ["cli"]

[dependencies]
anyhow = { workspace = true, optional = true }
async-trait.workspace = true
attestation-agent = { path = "../../attestation-agent/attestation-agent", default-features = false, optional = true }
base64.workspace = true
cfg-if.workspace = true
clap = { workspace = true, features = [ "derive" ], optional = true }
config = { workspace = true, optional = true }
crypto.path = "../../attestation-agent/deps/crypto"
env_logger = { workspace = true, optional = true }
image-rs = { path = "../../image-rs", default-features = false, features = ["kata-cc-rustls-tls"] }
kms = { path = "../kms", default-features = false }
log.workspace = true
prost = { workspace = true, optional = true }
protobuf = { workspace = true, optional = true }
rand.workspace = true
resource_uri.path = "../../attestation-agent/deps/resource_uri"
serde = { workspace = true, optional = true }
serde_json.workspace = true
strum = { workspace = true, features = ["derive"] }
tempfile = { workspace = true, optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = [
    "fs",
    "macros",
    "io-util",
    "process",
    "rt-multi-thread",
    "sync",
] }
tonic = { workspace = true, optional = true }
ttrpc = { workspace = true, features = ["async"], optional = true }
zeroize.workspace = true

[build-dependencies]
anyhow.workspace = true
tonic-build = { workspace = true, optional = true }
ttrpc-codegen = { workspace = true, optional = true }

[dev-dependencies]
assert_cmd.workspace = true
assert-json-diff.workspace = true
nix.workspace = true
rstest.workspace = true
serial_test.workspace = true
tempfile.workspace = true
tokio = { workspace = true, features = ["rt", "macros"] }

[features]
default = ["aliyun", "kbs", "bin", "ttrpc", "grpc", "cli"]

# support aliyun stacks (KMS, ..)
aliyun = ["tempfile"]

# support coco-KBS to provide confidential resources
kbs = ["kms/kbs"]

# support sev to provide confidential resources
sev = ["kms/sev"]

# support eHSM stacks (KMS, ...)
ehsm = []

# Binary RPC type
bin = [ "anyhow", "attestation-agent", "clap", "config", "env_logger", "serde" ]
ttrpc = ["dep:ttrpc", "protobuf", "ttrpc-codegen", "tokio/signal"]
grpc = ["prost", "tonic", "tonic-build", "tokio/signal"]

# for secret_cli
cli = ["clap/derive", "tokio/rt-multi-thread", "tokio/sync", "tokio/macros"]
